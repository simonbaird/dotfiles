#!/usr/bin/env ruby
#
# If you use an external apple keyboard on your laptop
# then you probably want to swap the apple command key and
# the left alt key so that your fingers can "alt-tab" easily.
#
# But when you're using your laptop's internal keyboard you
# need to swap them back. You can do this in about 10 clicks
# via the gnome 3 systems settings 'Region and Language' control
# panel. Or you can use this script.
#
# Run this to toggle between swapped and unswapped for the left alt,
# left windows key (or the command key on an apple keyboard).
#
# Latest version here:
# https://github.com/simonbaird/dotfiles/blob/master/bin/gswapalt
#
# Author: Simon Baird
#

GET_CMD        = '/usr/bin/gsettings get'
SET_CMD        = '/usr/bin/gsettings set'
SETTING_PATH   = 'org.gnome.libgnomekbd.keyboard'
SETTING_KEY    = 'options'
OPTION         = 'altwin\taltwin:swap_lalt_lwin'

# What are we doing?
action = ARGV[0] || 'toggle'

# Read current settings
# We get a serialised GVariant
#
# Examples of how it looks:
#  ['caps\tcaps:ctrl_modifier', 'altwin\taltwin:swap_lalt_lwin']
#  ['caps\tcaps:ctrl_modifier']
#  @as []
#
# When there are no options set we get an extra @as, not sure why
current_string = `#{GET_CMD} #{SETTING_PATH} #{SETTING_KEY}`.chomp.sub(/^@as /,'')

# This is close enough to ruby that we can eval it ;)
#options = eval current_string # use this if you want to live dangerously...

# ..but let's be sensible :)
options = current_string.gsub(/(^\[|\]$)/,'').split(', ').map{ |opt| opt.gsub(/(^'|'$)/,'') }

initially_swapped = options.include?(OPTION)

# Remove it first
options.delete OPTION

# Provide a few synonyms because why not...
case action
when 'unswap','clear','int' # int as in internal laptop keyboard
  # (Stays removed)

when 'swap','set','ext' # ext as in external apple keyboard
  # Add it
  options.push OPTION # Add it

when 'toggle'
  # Add it if wasn't there before
  options.push(OPTION) if !initially_swapped

when 'show'
  # Add it if was there before
  options.push(OPTION) if initially_swapped

#when 'detect'
  # TODO:
  # `lsusb | grep something`?

else
  puts <<-EOT
Usage: gswapalt [<action>]

Actions:
  toggle (default) - Toggle the 'Swap Left Alt and Left Win' option
  swap             - Set the 'Swap Left Alt and Left Win' option
  unswap           - Clear the 'Swap Left Alt and Left Win' option
  show             - Show the 'Swap Left Alt and Left Win' option
  EOT
  exit

end
# Serialize it carefully to the format gsettings expects
serialized = "[#{options.map{ |opt| "'#{opt}'" }.join(', ')}]"

# Write it back
do_it = "#{SET_CMD} #{SETTING_PATH} #{SETTING_KEY} \"#{serialized}\""
#puts do_it
`#{do_it}`

puts "Left Alt/Win now #{options.include?(OPTION) ? 'SWAPPED' : 'UNSWAPPED'}"
