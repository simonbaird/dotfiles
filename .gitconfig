[user]
  name = Simon Baird
  email = simon.baird@gmail.com

[color]
  branch = auto
  status = auto
  diff = auto

[push]
  default = tracking

[core]
  editor = gvim -f +0
  #editor = vi

[alias]

  # Nice colourful log summaries
  ll = "!git st; git --no-pager log --pretty='format:%Cred%cr %Cblue%h %Cgreen%cn:%Creset %s' -n20; echo"
  lll = log --pretty='format:%Cred%cr %Cblue%h %Cgreen%cn:%Creset %s'
  l = log -p
  ld = log -p

  # The only way to do it...
  ap = add --patch

  # Shortcuts
  #s = status -sb
  #st = status -sb
  s = status
  st = status
  c = checkout
  b = branch
  d = diff
  ds = diff --staged
  sd = diff --staged

  wdiff = diff --color-words
  wd = diff --color-words
  swd = diff --staged --color-words

  newbranch = checkout -b
  nb        = checkout -b

  newtrack = branch --track
  nt       = branch --track

  # Ville's, not sure exactly...
  wup = log -p origin..@{0}
  wu = log --stat origin..@{0}

  # Previous branch. Sometimes this doesn't work like after a merge or something
  prev = checkout @{-1}

  # https://gist.github.com/1501998
  ph = log --graph --pretty=pretty-history --abbrev-commit --date=relative

  branches-notsorted = "!sh -c 'git branch --list --no-color | \
    sed -e \"s/*/ /\" | \
    while read branch; do \
      git log -1 --format=format:\"%ct %Cred$branch:%Cblue %s %Cgreen%h%Creset (%ar)\n\" $branch; \
    done'"

  branches = "!sh -c 'git branches-notsorted | sort | cut -d\" \" -f2-'"

[pretty]
  pretty-history = format:%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset

[color "diff"]
  # Makes git log -p easier to read
	commit = yellow reverse
